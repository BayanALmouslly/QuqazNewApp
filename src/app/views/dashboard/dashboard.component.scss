/* .progress-circle {
    width: 8rem;
    height: 8rem;
    border-radius: 50%;
    position: relative;
  }
  
  .progress-bar-c {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    border: 15px solid red;
    border-top-color: transparent;
    animation: progress-animation 2s;
    animation-fill-mode: forwards;
    background: lightgray;
  }
  .progress-bar-c div{
    background: #fff;
    width: 100%;
    height: 100%;
    padding: 15px;
    border-radius: 50%;
  }
  
  .progress-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 24px;
    font-weight: bold;
    color: black;
  }
  
  @keyframes progress-animation {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  } */

$borderWidth: 15px;
$animationTime: 0.5s;
$border-color-default: rgba(229, 230, 235, 1);
$border-color-fill: rgba(255, 0, 0, 1);
$size: 10rem;
$howManySteps: 100; //this needs to be even.

.progress {
  width: $size;
  height: $size;
  line-height: $size;
  background: none;
  margin: 0 auto;
  box-shadow: none;
  position: relative;
  &:after {
    content: "";
    width: 100%;
    height: 100%;
    border-radius: 50%;
    border: $borderWidth solid $border-color-default;
    position: absolute;
    top: 0;
    left: 0;
  }
  > span {
    width: 50%;
    height: 100%;
    overflow: hidden;
    position: absolute;
    top: 0;
    z-index: 1;
  }
  .progress-left {
    left: 0;
  }
  .progress-bar {
    width: 100%;
    height: 100%;
    background: none;
    border-width: $borderWidth;
    border-style: solid;
    position: absolute;
    top: 0;
    border-color: $border-color-fill;
  }
  .progress-left .progress-bar {
    left: 100%;
    border-top-right-radius: ($size/2);
    border-bottom-right-radius: ($size/2);
    border-left: 0;
    -webkit-transform-origin: center left;
    transform-origin: center left;
    //animation: loading-2 1.5s linear forwards 1.8s;
  }
  .progress-right {
    right: 0;
    .progress-bar {
      left: -100%;
      border-top-left-radius: ($size/2);
      border-bottom-left-radius: ($size/2);
      border-right: 0;
      -webkit-transform-origin: center right;
      transform-origin: center right;
      //animation: loading-1 1.8s linear forwards;
    }
  }
  .progress-value {
    display: flex;
    border-radius: 50%;
    font-size: 1rem;
    text-align: center;
    line-height: 20px;
    align-items: center;
    justify-content: center;
    height: 100%;
    width: 100%;
    font-weight: 300;
    div {
      //margin-top: 10px;
    }
    span {
      font-size: 12px;
      text-transform: uppercase;
    }
  }
}

/* This for loop creates the necessary css animation names 
Due to the split circle of progress-left and progress right, we must use the animations on each side. 
*/
@for $i from 1 through $howManySteps {
  $stepName: ($i * (100 / $howManySteps));

  //animation only the left side if below 50%
  @if $i <= ($howManySteps/2) {
    .progress[data-percentage="#{$stepName}"] {
      .progress-right .progress-bar {
        animation: loading-#{$i} $animationTime linear forwards;
      }
      .progress-left .progress-bar {
        animation: 0;
      }
    }
  }
  //animation only the right side if above 50%
  @if $i > ($howManySteps/2) {
    .progress[data-percentage="#{$stepName}"] {
      .progress-right .progress-bar {
        animation: loading-#{($howManySteps/2)}
          $animationTime
          linear
          forwards; //set the animation to longest animation
      }
      .progress-left .progress-bar {
        animation: loading-#{$i -
          ($howManySteps/2)}
          $animationTime
          linear
          forwards
          $animationTime;
      }
    }
  }
}

//animation
@for $i from 1 through ($howManySteps/2) {
  $degrees: (180/ ($howManySteps/2));
  $degrees: ($degrees * $i);
  @keyframes loading-#{$i} {
    0% {
      -webkit-transform: rotate(0deg);
      transform: rotate(0deg);
    }
    100% {
      -webkit-transform: rotate($degrees);
      transform: rotate(#{$degrees}deg);
    }
  }
}
::ng-deep {
  .p-progressbar-1 .p-progressbar-value {
    background: red;
  }
  .p-progressbar-2 .p-progressbar-value {
    background: rgba(36, 0, 137, 1);
  }
  .p-progressbar-3 .p-progressbar-value {
    background: rgba(46, 19, 0, 1);
  }
  .p-progressbar-4 .p-progressbar-value {
    background: rgba(189, 35, 34, 1);
  }
  .p-progressbar-5 .p-progressbar-value {
    background: rgb(255, 234, 0);
  }
}
/////////
.cou-title {
  font-weight: 600;
}
.sub-title {
  color: rgba(189, 35, 34, 1);
  font-weight: 600;
  margin: 0 0.3rem;
}
.t-1 {
  width: 17px !important;
  height: 17px !important;
  background-color: rgb(23, 18, 84);
  display: flex;
  border: 2px solid rgb(15, 1, 49);
}
.t-2 {
  width: 17px !important;
  height: 17px !important;
  background-color: rgb(42, 42, 42);
  display: flex;
  border: 2px solid rgb(0, 0, 0);
}
.t-3 {
  width: 17px !important;
  height: 17px !important;
  background-color: rgba(189, 35, 34, 1);
  display: flex;
  border: 2px solid rgb(158, 29, 29);
}
